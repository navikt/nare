buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.20'
}
repositories {
    jcenter()
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
}
def junit_jupiter_version = '5.3.2'

kotlin {
    jvm()
    js() {
        compilations.all {
            kotlinOptions {
                languageVersion = "1.3"
                moduleKind = "umd"
                sourceMap = true
                metaInfo = true
            }
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
        jvmTest {
            dependencies {
               implementation kotlin('test')
               implementation kotlin('test-junit')
               implementation "com.sparkjava:spark-core:2.8.0"
               implementation "com.google.code.gson:gson:2.2.4"
               implementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
               implementation "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
               implementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
            }
            resources.srcDir('src/jvmTest/resources')
            /*resources {
                srcDirs "src/jvmTest/resources"
            }*/
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}

def webFolder = new File(project.buildDir, "../src/jsMain/web")
def jsCompilations = kotlin.targets.js.compilations

task populateWebFolder(dependsOn: [jsMainClasses]) {
    doLast {
        copy {
            from jsCompilations.main.output
            from kotlin.sourceSets.jsMain.resources.srcDirs
            jsCompilations.test.runtimeDependencyFiles.each {
                if (it.exists() && !it.isDirectory()) {
                    from zipTree(it.absolutePath).matching { include '*.js' }
                }
            }
            into webFolder
        }
    }
}

jsJar.dependsOn(populateWebFolder)

task run(type: JavaExec, dependsOn: [jvmMainClasses, jsJar]) {
    main = "sample.SampleJvmKt"
    classpath { [
            kotlin.targets.jvm.compilations.main.output.allOutputs.files,
            configurations.jvmRuntimeClasspath,
    ] }
    args = []
}
